apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: image-caption-app-mt2024153
  labels:
    app: loki
spec:
  ports:
    - name: http
      port: 3100
      targetPort: 3100
  selector:
    app: loki

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: image-caption-app-mt2024153
data:
  local-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      log_level: info

    ingester:
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s
      max_transfer_retries: 0

    schema_config:
      configs:
        - from: 2020-10-15
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/index
        cache_location: /loki/cache
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h

    chunk_store_config:
      max_look_back_period: 0s

    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h

    ruler:
      storage:
        type: local
        local:
          directory: /tmp/rules
      rule_path: /tmp/rules
      alertmanager_url: http://localhost:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: image-caption-app-mt2024153
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      initContainers:
      - name: init-loki-storage
        image: busybox
        command: ["sh", "-c", "mkdir -p /loki/index /loki/cache /loki/chunks"]
        volumeMounts:
          - name: loki-storage
            mountPath: /loki
      containers:
        - name: loki
          image: grafana/loki:2.9.4
          ports:
            - containerPort: 3100
          args:
            - "-config.file=/etc/loki/local-config.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: loki-storage
              mountPath: /loki
          securityContext:
            runAsUser: 0 
      volumes:
        - name: config
          configMap:
            name: loki-config
        - name: loki-storage
          emptyDir: {}          
